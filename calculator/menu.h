#pragma once
#include <vector>
#include <iostream>
#include <map>

using namespace std;

class Menu
{
private:
	vector<double> Data;
	map <int, string> Errors = { {1,"n = 0"},{2,"Число испытаний мало для формулы Пуассона"},{3,"Вероятность велика для Пуассона"},{4,"число должно быть целое"},{5,"n > 15"},{6,"Сигма < 0"},{7, "n < 100 в Пуассоне"},{8, "лямбда >= 10"}, {10,"В распределении присутствуют одинаковые X-ы"},{11,"Нехватка аргументов"},{12,"Число должно быть больше 0"},{13,"Сумма вероятностей не равна 1"},{14,"m > n"},{15,"левая граница оказалась больше правой в биномиальном распределении"},{16,"правая граница в биномиальном распределении не может быть больше n"},{17,"p < 0 или p > 1"},{18,"m < 0"},{19,"Альфа > или = Бета"} };
public:
	vector<double> start();
	
	void begin() { Data = start(); } 
	//Вывод в консоль начального меню, считывание данных пользователя
	
	inline vector<double> result() { return this->Data; } 
	//Возвращает вектор типа double, в которм хранятся данные, считанные с консоли 
	
	void set(const map<int,string>& error) { Errors = error; }; 
	//Задает вектор строк со списком ошибок

	void errorHandler(int value); 
	//Обрабатывает ошибку; 
	//value - код ошибки

	string getFunction();


	/////////////////////////////////////////
	/// \breif вывод результата
	/// \param ansver - вектор результата
	///               value - номер функции
	/////////////////////////////////////////
	void outputinAnswer(vector<double> ansver, int value);

};

